generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int    @id @default(autoincrement())
  externalId String @unique
  email      String @unique
  username   String
  avatar     String

  conversationId Int?
  conversation   Conversation? @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  messages       Message[]
  items          Item[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Conversation {
  id   Int     @id @default(autoincrement())
  name String?

  messages Message[]
  users    User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Message {
  id      Int     @id @default(autoincrement())
  content String?
  file    String?

  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  userId Int
  user   User @relation(fields: [userId], references: [id])

  parentId Int?
  parent   Message?  @relation("MessageReplies", fields: [parentId], references: [id])
  replies  Message[] @relation("MessageReplies")

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Item {
  id Int @id @default(autoincrement())

  title       String
  description String
  imageUrl    String?

  userId Int
  user   User @relation(fields: [userId], references: [id])

  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Category {
  id          Int     @id @default(autoincrement())
  title       String
  description String?

  parentId Int?
  parent   Category?  @relation("CategoryToSubcategories", fields: [parentId], references: [id], onDelete: Cascade)
  children Category[] @relation("CategoryToSubcategories")

  items Item[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
