generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  externalId     String        @unique
  email          String        @unique
  username       String
  avatar         String
  conversationId Int?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @default(now())
  items          Item[]
  messages       Message[]
  conversation   Conversation? @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@index([conversationId], map: "User_conversationId_fkey")
}

model Conversation {
  id        Int       @id @default(autoincrement())
  name      String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  messages  Message[]
  users     User[]
}

model Message {
  id             Int          @id @default(autoincrement())
  content        String?
  file           String?
  conversationId Int
  userId         Int
  parentId       Int?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now())
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  parent         Message?     @relation("MessageReplies", fields: [parentId], references: [id])
  replies        Message[]    @relation("MessageReplies")
  user           User         @relation(fields: [userId], references: [id])

  @@index([conversationId], map: "Message_conversationId_fkey")
  @@index([parentId], map: "Message_parentId_fkey")
  @@index([userId], map: "Message_userId_fkey")
}

model Item {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  userId      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  imageUrl    String?
  price       Float
  categoryId  Int
  Category    Category @relation(fields: [categoryId], references: [id])
  user        User     @relation(fields: [userId], references: [id])

  @@index([categoryId], map: "Item_categoryId_fkey")
  @@index([userId], map: "Item_userId_fkey")
}

model Category {
  id             Int        @id @default(autoincrement())
  title          String
  parentId       Int?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @default(now())
  description    String?
  Category       Category?  @relation("CategoryToCategory", fields: [parentId], references: [id], onDelete: Cascade)
  other_Category Category[] @relation("CategoryToCategory")
  Item           Item[]

  @@index([parentId], map: "Category_parentId_fkey")
}
